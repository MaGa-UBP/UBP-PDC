/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2018-04-23 19:28:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Arrays;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Arrays");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t\t<title>Ejercicio 4</title>\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/style.css\">\n");
      out.write("\t\t\n");
      out.write("\t</head>\n");
      out.write("\t<body>\n");
      out.write("\n");
      out.write("\t\t<h1>Adivina si puedes</h1>\n");
      out.write("\t\t<form id=\"formJuego\" method=\"post\" action=\"./index.jsp\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t");

			String[] celdas = request.getParameterValues("celdas");
			String celdaSeleccionadaStr = request.getParameter("celdaSeleccionada");
			String opcionSeleccionada =  request.getParameter("opcionNumero");
			String valorSeleccionadoStr =  request.getParameter("respuestaNumero");
			String [] correctos = request.getParameterValues("correctos");
			
			String res = "correct";
			int cantCorrectos = 0;
			
			if(correctos != null){
				for(String correcto : correctos){
					out.println("<input type=\"hidden\" name=\"correctos\" value=\""+correcto+"\">");
				}
				cantCorrectos = correctos.length;
			}

			
			if(opcionSeleccionada!= null){
				int celdaSeleccionada = Integer.parseInt(celdaSeleccionadaStr);
				int valorSeleccionado =  Integer.parseInt(valorSeleccionadoStr);
				if(opcionSeleccionada.equals("mayor")){
					if(Integer.parseInt(celdas[celdaSeleccionada])<valorSeleccionado){
						out.println("<p class=\"message\">Fallaste, vuelve a intentarlo");
						res = "incorrect";
					}else{
						out.println("<input type=\"hidden\" name=\"correctos\" value=\""+celdaSeleccionada+"\">");
						cantCorrectos++;
					}
				}else{
					if(Integer.parseInt(celdas[celdaSeleccionada])>valorSeleccionado){
						out.println("<p class=\"message\">Fallaste, vuelve a intentarlo");
						res = "incorrect";
					}else{
						out.println("<input type=\"hidden\" name=\"correctos\" value=\""+celdaSeleccionada+"\">");
						cantCorrectos++;
					}
				}
			}
			if(cantCorrectos == 3){
				out.println("<p class=\"message\">Â¡Ganaste!</p>");
			}
			out.println("<table>");
			if(celdas == null || !res.equals("correct")) {
				for(int i = 0; i<3;i++){
					out.println("<tr>");
					for(int j = 0; j<3; j++){
						out.println("<td class=\"optionSelect noSelected\" data-value=\""+(i*3+j)+"\">");
						out.println("<input type=\"hidden\" name=\"celdas\" value=\""+Double.class.cast(Math.random() * 10).intValue()+"\"");
						out.println("<td>");
					}
					out.println("</tr>");
				}
			}else{
				int celdaSeleccionada = Integer.parseInt(celdaSeleccionadaStr);
				for(int i = 0; i<3;i++){
					out.println("<tr>");
					for(int j = 0; j<3; j++){
						int iter = i*3+j;
						if(celdaSeleccionada == iter || (correctos != null && Arrays.asList(correctos).contains( Integer.toString(iter)))){
							out.println("<td class=\"optionSelect correct\" data-value=\""+ iter +"\">");
							out.println("<p>"+celdas[iter]+"</p>");
							out.println("<input type=\"hidden\" name=\"celdas\" value=\""+ celdas[iter] +"\"");
							out.println("<td>");
						}else{
							out.println("<td class=\"optionSelect\" data-value=\""+ iter +"\">");
							out.println("<input type=\"hidden\" name=\"celdas\" value=\""+ celdas[iter] +"\"");
							out.println("<td>");
						}
						
					}
					out.println("</tr>");
				}
			}
			
      out.write("\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t\t<div class=\"respuesta\">\n");
      out.write("\t\t\t\t<input type=\"radio\" id=\"mayor\" name=\"opcionNumero\" value=\"mayor\">\n");
      out.write(" \t\t\t\t<label for=\"mayor\">Mayor</label>\n");
      out.write("\n");
      out.write("\t\t\t\t<input type=\"radio\" id=\"menor\" name=\"opcionNumero\" value=\"menor\" checked=\"checked\">\n");
      out.write("\t\t\t\t<label for=\"menor\">Menor o igual</label>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"respuestaNumero\" name=\"respuestaNumero\" required>\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"celdaSeleccionada\" name=\"celdaSeleccionada\" value=\"-1\"> \n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"btnContainer\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t");

				if(cantCorrectos ==3){
					out.println("<a href=\"./\" class=\"btnJugar\">Recomenzar</a>");
				}else{
					out.println("<input id=\"submit\" type=\"submit\" class=\"btnJugar\" value=\"Probar Suerte\">");
				}
				
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t</form>\n");
      out.write("\t\t<script src=\"./js/jquery.min.js\"></script>\n");
      out.write("\t\t<script src=\"./js/adivina.js\"></script>\n");
      out.write("\t</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
