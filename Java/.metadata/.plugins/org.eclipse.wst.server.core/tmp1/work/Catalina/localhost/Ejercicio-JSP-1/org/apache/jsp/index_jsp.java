/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2018-04-23 18:18:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ar.edu.ubp.pdc.classes.Juego;
import java.util.HashMap;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ar.edu.ubp.pdc.classes.Juego");
    _jspx_imports_classes.add("java.util.HashMap");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Piedra, Papel o Tijera</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/style.css\">\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");

	HashMap<Integer, String> mapResultados;
	mapResultados = new HashMap<Integer,String>();
	mapResultados.put(-1, "perdiste");
	mapResultados.put(0, "empataste");
	mapResultados.put(1, "ganaste");
	
	HashMap<String, String> mapOpciones;
	mapOpciones = new HashMap<String,String>();
	mapOpciones.put("0", "Piedra");
	mapOpciones.put("1", "Papel");
	mapOpciones.put("2", "Tijera");
	
	
	Integer pGanadas = 0;
	Integer pPerdidas = 0;
	
	if(request.getParameter("pGanadas") != null){
		pGanadas = Integer.parseInt(request.getParameter("pGanadas"));
	}
	
	if(request.getParameter("pPerdidas") != null){
		pPerdidas = Integer.parseInt(request.getParameter("pPerdidas"));
	}
	
	if(request.getParameterValues("opcion") != null){
		String opcion = request.getParameter("opcion");
		Juego.getJuego().jugar(Integer.parseInt(opcion));
		if(Juego.getJuego().getResultado() == 1){
			pGanadas++;
		}else if(Juego.getJuego().getResultado() == -1){
			pPerdidas++;
		}
	}
	String arrJugador[] = request.getParameterValues("jugador");
	String arrComputadora[] = request.getParameterValues("computadora");
	String arrResultados[] = request.getParameterValues("resultado");
	String jugadas = request.getParameter("jugadas");
	

      out.write("\n");
      out.write("\t<h3>Te invito a jugar... :)</h3>\n");
      out.write("\t");
 if(pGanadas !=3 && pPerdidas !=3){ 
      out.write("\n");
      out.write("\t\t<form id=\"jugadaForm\" method=\"POST\" action=\"index.jsp\">\n");
      out.write("\t\t\t<label id=\"selectLbl\">Seleccione una opci&oacute;n:</label>\n");
      out.write("\t\t\t<select name=\"opcion\" required>\n");
      out.write("\t\t\t  <option value=\"-1\" selected=\"selected\"></option>\n");
      out.write("\t\t\t  <option value=\"0\">Piedra</option>\n");
      out.write("\t\t\t  <option value=\"1\">Papel</option>\n");
      out.write("\t\t\t  <option value=\"2\">Tijera</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t<input id=\"submit\" type=\"submit\" class=\"btnJugar\" value=\"Jugar\">\n");
      out.write("\t\t\t");

			out.println("<input type=\"hidden\" name=\"pGanadas\" value=\""+pGanadas+"\">");
			out.println("<input type=\"hidden\" name=\"pPerdidas\" value=\""+pPerdidas+"\">");
			if(jugadas != null){
				//INPUT CON CONCATENACION

			}
			if(arrJugador != null){
				for(int i=0; i<arrJugador.length; i++){
					
					out.println("<input type=\"hidden\" name=\"jugador\" value=\""+arrJugador[i]+"\">");
					out.println("<input type=\"hidden\" name=\"computadora\" value=\""+arrComputadora[i]+"\">");
					out.println("<input type=\"hidden\" name=\"resultado\" value=\""+arrResultados[i]+"\">");
				}
			}
			if(request.getParameter("opcion") != null){
				String res = mapResultados.get(Juego.getJuego().getResultado());
				out.println("<input type=\"hidden\" name=\"jugador\" value=\""+Juego.getJuego().getEleccionUsuario()+"\">");
				out.println("<input type=\"hidden\" name=\"computadora\" value=\""+Juego.getJuego().getEleccionDispositivo()+"\">");
				out.println("<input type=\"hidden\" name=\"resultado\" value=\""+res+"\">");
			}
			
      out.write("\n");
      out.write("\t\t\t<div id=\"errorSelect\" class=\"hide\">\n");
      out.write("\t\t\t\t<p>Debe seleccionar una opci&oacute;n</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</form> \n");
      out.write("\t");
 } 
	
	if(request.getParameter("opcion") != null){
		out.println("<h3>Resultados</h3>");
		out.println("<table class=\"resultados\"><tr class=\"header\"><th>Usuario</th><th>Computadora</th><th>Resultado</th></tr>");
		//Muestro los anteriores
		if(arrJugador != null){
			for(int i=0; i<arrJugador.length; i++){
				out.println("<tr class="+arrResultados[i]+"><td>"+arrJugador[i]+"</td><td>"+arrComputadora[i]+"</td><td class=\"resultados\">"+arrResultados[i]+"</td></tr>");	
			}
		}
		//Muestro el actual seleccionado
		String res = mapResultados.get(Juego.getJuego().getResultado());
		out.println("<tr class="+res+"><td>"+Juego.getJuego().getEleccionUsuario()+"</td><td>"+Juego.getJuego().getEleccionDispositivo()+"</td><td class=\"resultados\">"+res+"</td></tr>");
		out.println("</table>");
	}
	
	if(pGanadas ==3 ){
		out.println("<div class=\"mensaje\">");
		out.println("<p>Felicitaciones, ganaste! :D</p>");
		out.println("<a href=\"#\" id=\"volverJugar\" class=\"btnJugar\">Volver a jugar</a>");
		out.println("</div>");
	}else if (pPerdidas == 3){
		out.println("<div class=\"mensaje\">");
		out.println("<p>Perdiste :(</p>");
		out.println("<a href=\"#\" id=\"volverJugar\" class=\"btnJugar\">Volver a jugar</a>");
		out.println("</div>");
	}
	
      out.write("\n");
      out.write("\t\n");
      out.write("\t<script src=\"./js/jquery.min.js\"></script>\n");
      out.write("\t<script src=\"./js/validateForm.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
