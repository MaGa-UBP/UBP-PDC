/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2018-04-21 20:42:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Prode</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/style.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t");

		List<List<String>> equipos = new ArrayList<List<String>>();
		if(equipos.size() == 0) {
			equipos.add(Arrays.asList("EQUIPO A", "EQUIPO B"));
			equipos.add(Arrays.asList("EQUIPO C", "EQUIPO D"));
			equipos.add(Arrays.asList("EQUIPO E", "EQUIPO F"));
			equipos.add(Arrays.asList("EQUIPO G", "EQUIPO H"));
			equipos.add(Arrays.asList("EQUIPO I", "EQUIPO J"));
			equipos.add(Arrays.asList("EQUIPO K", "EQUIPO L"));
			equipos.add(Arrays.asList("EQUIPO M", "EQUIPO N"));
			equipos.add(Arrays.asList("EQUIPO O", "EQUIPO P"));
			equipos.add(Arrays.asList("EQUIPO Q", "EQUIPO R"));
			equipos.add(Arrays.asList("EQUIPO S", "EQUIPO T"));
		}
	
      out.write("\n");
      out.write("\t<div class=\"colInline\">\n");
      out.write("\t\t<h1>Prode</h1>\n");
      out.write("\t\t<form method=\"POST\" id=\"prodeForm\" action=\"index.jsp\">\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>Equipo</th>\n");
      out.write("\t\t\t\t\t<th>L</th>\n");
      out.write("\t\t\t\t\t<th>E</th>\n");
      out.write("\t\t\t\t\t<th>V</th>\n");
      out.write("\t\t\t\t\t<th>Equipo</th>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t");

				int i = 0;
				
				for(List<String> match : equipos){
					out.println("<tr class=\"filaPartido\">");
					out.println("<td>"+match.get(0)+"</td>");
					String checkedL="", checkedE="", checkedR=""; 
					if(request.getParameter("resultado-"+i) != null){
						String res = request.getParameter("resultado-"+i);
						if(res.equals("izq")){
							checkedL="checked=\"checked\"";
						}else if(res.equals("empate")){
							checkedE="checked=\"checked\"";
						}else if(res.equals("der")){
							checkedR="checked=\"checked\"";
						}
					}
					out.println("<td><input type=\"checkbox\" name=\"resultado-"+i+"\" value=\"izq\" "+checkedL+"></td>");
					out.println("<td><input type=\"checkbox\" name=\"resultado-"+i+"\" value=\"empate\" "+checkedE+"></td>");
					out.println("<td><input type=\"checkbox\" name=\"resultado-"+i+"\" value=\"der\" "+checkedR+"></td>");
					out.println("<td>"+match.get(1)+"</td>");
					out.println("</tr>");
					i++;
				}
				
      out.write("\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t\t");

			if(request.getParameter("resultado-0") == null){
				out.println("<input id=\"submit\" type=\"submit\" class=\"btnProde\" value=\"Resultados\">");
			}else{
				out.println("<a href=\"#\" id=\"reset\" class=\"btnProde\">Volver a Jugar</a>");
			}
			 
      out.write("\n");
      out.write("\t\t</form>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t \t");

	 		Random random = new Random();
			if(request.getParameter("resultado-0") != null){
				out.println("<div class=\"colInline\">");
				out.println("<h1>Resultados</h1>");
				out.println("<table>");
				out.println("<tr><th>Equipo</th><th>L</th><th>V</th><th>Equipo</th></tr>");

				List<List<Integer>> resultados = new ArrayList<List<Integer>>();
				i=0;
				int cantCorrectos = 0, cantIncorrectos = 0;
				for(List<String> match : equipos){
					Integer l = random.nextInt(6);
					Integer v = random.nextInt(6);
					
					String scores="";
					if(l>v){
						scores="izq";
					}else if(l<v){
						scores="der";
					}else{
						scores="empate";
					}
					String classRes = "";
					
					if(scores.equals(request.getParameter("resultado-"+i))){
						classRes = "success";
						cantCorrectos++;
					}else{
						classRes = "error";
						cantIncorrectos++;
					}
					out.println("<tr class=\""+ classRes +" filaPartido\">");
					out.println("<td>"+match.get(0)+"</td>");
					out.println("<td>"+l+"</td>");
					out.println("<td>"+v+"</td>");
					out.println("<td>"+match.get(1)+"</td>");
					out.println("</tr>");
					resultados.add(Arrays.asList(l, v));
					i++;
				}
				out.println("</table>");
				out.println("</div>");
				
				out.println("<div class=\"colInline\">");
				out.println("<h1>Estad&iacute;sticas</h1>");
				out.println("<p>Resultados correctos: "+cantCorrectos+"</p>");
				out.println("<p>Resultados incorrectos: "+cantIncorrectos+"</p>");
				out.println("</div>");
			}
			
	 	
      out.write("\n");
      out.write("\n");
      out.write("\t<script src=\"./js/jquery.min.js\"></script>\n");
      out.write("\t<script src=\"./js/validateForm.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
