/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2018-04-25 23:53:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.util.Locale;
import java.text.DateFormat;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("java.text.DateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Mi Agenda - Parcial PDC</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./assets/css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./assets/bootstrap.3.3.7/content/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-xs-12 col-sm-6 col-lg-4\">\r\n");
      out.write("\t\t\t\t<h1>Mi Agenda</h1>\r\n");
      out.write("\t\t\t\t<form id=\"formAgenda\" method=\"post\" action=\"index.jsp\">\r\n");
      out.write("\t\t\t\t");

				String [] descripciones = request.getParameterValues("descripcion");
				String [] fechas = request.getParameterValues("fecha");
				String [] prioridad = request.getParameterValues("prioridad");
				String [] notifEmail = request.getParameterValues("email");
				String [] descartadas = request.getParameterValues("descartar");

				//Creo hiddens para recuperar valores de eventos guardados anteriormente
				if(descripciones != null && fechas != null  && prioridad != null && notifEmail != null){
					int i = 0;
					for(String descripcion : descripciones){
						out.println("<input type=\"hidden\" name=\"fecha\" value=\""+fechas[i]+"\">");
						out.println("<input type=\"hidden\" name=\"descripcion\" value=\""+descripcion+"\">");
						out.println("<input type=\"hidden\" name=\"prioridad\" value=\""+prioridad[i]+"\">");
						out.println("<input type=\"hidden\" name=\"email\" value=\""+notifEmail[i]+"\">");
						out.println("<input type=\"hidden\" name=\"descartar\" id=\"descartar_"+i+"\" value=\""+descartadas[i]+"\">");
						i++;
					}
				}

				
				//Creo date para setear valor en input[name=fecha]
				Locale     locale;
				DateFormat df, df2;
				String     date, date2;

				locale = request.getLocale();
				df     = DateFormat.getDateInstance(DateFormat.MEDIUM, locale);
				date   = df.format(new Date());
				
				df2     = DateFormat.getDateInstance(DateFormat.SHORT, locale);
				date2   = df2.format(new Date());
				
				date = date.split("-")[2]+"-"+ date2.split("/")[1]+"-"+ date.split("-")[0];
				
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t");
  /* 	Creo un campo hidden input[name=descartar] para guardar un flag de si el 
							evento fue descartado o no. Default = false	*/
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\"  name=\"descartar\" value=\"false\"/>\r\n");
      out.write("            \t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t    \t<label for=\"iFechaEvento\">Fecha</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"date\" ");
      out.print( "value=\""+date+"\"" );
      out.write(" id=\"iFechaEvento\" name=\"fecha\" class=\"form-control\" required >\r\n");
      out.write("\t\t\t\t\t\t \t</div>\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t\t \t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"iPrioridad\">Priodidad</label>\r\n");
      out.write("\t\t                    <select id=\"iPrioridad\" name=\"prioridad\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"Alta\">Alta</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"Media\" selected=\"selected\">Media</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"Baja\">Baja</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t\t \t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"iDescripcion\">Descripcion</label>\r\n");
      out.write("\t\t\t\t\t\t\t<textarea cols=\"50\" rows=\"5\" id=\"iDescripcion\" name=\"descripcion\" class=\"form-control\" placeholder=\"Ingrese la descripciÃ³n del evento\" required></textarea>\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t\t \t\t<div class=\"col-md-4\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"iNotificacionS\">Notificar</label>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"radio\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"notif\" value=\"S\" id=\"iNotificacionS\" checked=\"checked\">Si</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"notif\" value=\"N\" id=\"iNotificacionN\">No</label>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t\t \t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"iEmail\">Email a notificar</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"email\" id=\"iEmail\" name=\"email\" class=\"form-control\" placeholder=\"Ingrese el e-mail a notificar\" required>\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t\t \t\t<div class=\"col-xs-12\">\r\n");
      out.write("\t\t\t\t \t\t\t<input type=\"submit\"  name=\"btnSubmit\" class=\"btn btn-primary\" value=\"Agendar\"/>\r\n");
      out.write("\t\t\t\t \t\t\t<button type=\"reset\"  name=\"btnReset\" class=\"btn btn-warning\">Limpiar</button>\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t\t \t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			//Creo tabla de resultados con los datos de los eventos anteriores y el ultimo agregado
			if(descripciones != null && fechas != null  && prioridad != null && notifEmail != null){
				out.println("<div class=\"row\">");
				out.println("<div class=\"col-xs-12 col-sm-8\">");
				out.println("<table  class=\"table\">");
				out.println("<thead><tr><th>#</th><th>Fecha</th><th>Descripci&oacute;n</th><th>Prioridad</th><th>Notificar a</th><th></th></tr></thead>  <tbody>");
				int i = 0;
				for(String descripcion : descripciones){
					out.println("<tr "+(descartadas[i].equals("true")? "class=\"recuperar\"" : "")+">");
					out.println("<td class=\"numero\">"+(i+1)+"</td>");
					out.println("<td class=\"decorate\">"+fechas[i]+"</td>");
					out.println("<td class=\"decorate\">"+descripcion+"</td>");
					out.println("<td class=\"decorate\">"+prioridad[i]+"</td>");
					/* 	Uso texto "N" para cuando el email no estÃ¡ informado y asi poder mantener el index igual
						para todos los campos. Si el texto no es "N" muestro el mail, sino no muestro nada			*/
					out.println("<td class=\"decorate\">"+(!notifEmail[i].equals("N")? notifEmail[i] : " ")+"</td>");
					/* 	Controlo si el evento fue descartado o no emdiante el hidden generado para esto	*/
					out.println("<td><a href=\"#\" class=\"btnDescartar\">"+(descartadas[i].equals("false")? "Descartar" : "Recuperar")+"</a></td>");
					out.println("</tr>");
					i++;
				}
				
				
				out.println(" </tbody></table");
				out.println("</div>");
				out.println("</div>");
			}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"./assets/js/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"./assets/bootstrap.3.3.7/Scripts/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"./assets/js/validate.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
